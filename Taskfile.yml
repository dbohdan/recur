version: '3'

vars:
  dist_dir: dist/
  ext: '{{if eq OS "windows"}}.exe{{end}}'
  subdir: v2
  test_binaries: |
    test/env
    test/exit99
    test/hello
    test/sleep

env:
  CGO_ENABLED: 0

tasks:
  default:
    deps:
      - all

  all:
    desc: 'Build and test everything'
    deps:
      - build
      - test

  build:
    desc: 'Build all components'
    deps:
      - build_readme
      - build_binaries

  build_binaries:
    desc: 'Build all necessary binaries'
    deps:
      - build_recur
      - build_test_binaries

  build_binary:
    desc: 'Build a single Go binary'
    internal: true
    cmds:
      - go build -o {{.out | shellQuote}}{{.ext}} {{.src | shellQuote}}

  build_readme:
    desc: 'Generate README.md from template'
    deps:
      - build_recur
    dir: '{{.subdir}}'
    cmds:
      - go run ../script/render_template.go < ../README.template.md > ../README.md
    status:
      - README.template.md
      - '{{.subdir}}/main.go'
    generates:
      - README.md

  build_recur:
    desc: 'Build the recur binary'
    cmds:
      - task: build_binary
        vars:
          out: '{{.subdir | shellQuote}}/recur'
          src: ./{{.subdir | shellQuote}}/main.go
    sources:
      - '{{.subdir}}/main.go'
    generates:
      - '{{.subdir}}/recur{{.ext}}'

  build_test_binaries:
    desc: 'Build all test binaries'
    cmds:
      - task: build_binary
        vars:
          src: '{{.test_binary}}.go'
          out: '{{.test_binary}}'
        for:
          var: test_binaries
          as: test_binary
    sources:
      - test/env.go
      - test/exit99.go
      - test/hello.go
      - test/sleep.go
    generates:
      - test/env{{.ext}}
      - test/exit99{{.ext}}
      - test/hello{{.ext}}
      - test/sleep{{.ext}}

  clean:
    desc: 'Clean up binaries and generated files'
    cmds:
      - rm -f README.md
      - rm -f {{.subdir | shellQuote}}/recur{{.ext}}
      - cmd: rm -f {{.test_binary | shellQuote}}{{.ext}}
        for:
          var: test_binaries
          as: test_binary

  release:
    desc: 'Prepare a release'
    dir: '{{.subdir}}'
    cmds:
      - go run ../script/release.go
      - mkdir -p ../{{.dist_dir | shellQuote}}
      - mv dist/* ../{{.dist_dir | shellQuote}}
      - rmdir dist/

  test:
    desc: 'Run tests'
    deps:
      - build_binaries
    dir: '{{.subdir}}'
    cmds:
      - go test
